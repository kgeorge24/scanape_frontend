{"ast":null,"code":"import _toConsumableArray from \"/Users/flatironschool/Personal Projects/scanape_frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/flatironschool/Personal Projects/scanape_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/flatironschool/Personal Projects/scanape_frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/flatironschool/Personal Projects/scanape_frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/flatironschool/Personal Projects/scanape_frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/flatironschool/Personal Projects/scanape_frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/flatironschool/Personal Projects/scanape_frontend/src/components/GroceryList.js\";\nimport React, { Component } from 'react';\nimport GroceryCard from './GroceryCard';\n\nvar GroceryList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GroceryList, _Component);\n\n  function GroceryList() {\n    var _this;\n\n    _classCallCheck(this, GroceryList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GroceryList).call(this));\n\n    _this.componentDidMount = function () {\n      var token = localStorage.getItem('token');\n\n      if (token) {\n        fetch('http://localhost:3000/current_user', {\n          headers: {\n            'Content-Type': 'application/json',\n            'Accepts': 'application/json',\n            Authorization: token\n          }\n        }).then(function (res) {\n          return res.json();\n        }).then(function (json) {\n          return _this.setState({\n            user: json\n          }, function () {\n            return _this.getUserIngredients(_this.state);\n          });\n        });\n      }\n    };\n\n    _this.getUserIngredients = function (state) {\n      var token = localStorage.getItem('token');\n      fetch('http://localhost:3000/user_ingredients', {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: token\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (userIngredients) {\n        var arrayOfUserIngredients = [];\n        userIngredients.forEach(function (userIngredient) {\n          var id = state.user.id;\n\n          if (parseInt(userIngredient.user_id) === id) {\n            arrayOfUserIngredients.push(userIngredient);\n          }\n        });\n\n        _this.getIngredients(arrayOfUserIngredients);\n      });\n    };\n\n    _this.getIngredients = function (state) {\n      var token = localStorage.getItem('token'); // console.log('were here')\n\n      state.forEach(function (ui) {\n        fetch('http://localhost:3000/ingredients', {\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: token\n          }\n        }).then(function (res) {\n          return res.json();\n        }).then(function (json) {\n          json.forEach(function (ing) {\n            if (parseInt(ui.ingredient_id) === ing.id) {\n              _this.setState({\n                ingredients: _toConsumableArray(_this.state.ingredients).concat([ing])\n              });\n            }\n          });\n        });\n      });\n    };\n\n    _this.scanHandler = function (e) {\n      e.preventDefault();\n      console.log('hey');\n      var token = localStorage.getItem('token');\n      fetch('http://localhost:3000/scans', {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: token\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        json.forEach(function (scan) {\n          if (scan.barcode === _this.state.barcode) {} else {\n            fetch('http://localhost:3000/scans', {\n              method: 'POST',\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                barcode: _this.state.barcode,\n                user_id: _this.props.user.id\n              })\n            }).then(function (res) {\n              return res.json();\n            }).then(function (json) {\n              return _this.setState({\n                ingredients: _toConsumableArray(_this.state.ingredients).concat([json]),\n                barcode: ''\n              });\n            });\n          }\n        });\n      });\n    };\n\n    _this.changeHandler = function (e) {\n      // console.log('change')\n      _this.setState({\n        barcode: e.target.value\n      });\n    };\n\n    _this.rerender = function (object, index) {\n      console.log(object); // let newUserIngredientsArray = [...this.state.userIngredientsArray];\n      // newUserIngredientsArray.splice(index, 1)\n\n      var newIngredientsArray = _toConsumableArray(_this.state.ingredients);\n\n      newIngredientsArray.splice(index, 1);\n\n      _this.setState({\n        ingredients: newIngredientsArray\n      });\n    };\n\n    _this.collectSelectedItems = function (item) {\n      console.log('reached');\n\n      _this.setState({\n        selectedItems: _toConsumableArray(_this.state.selectedItems).concat([item])\n      }, function () {\n        return console.log(_this.state.selectedItems);\n      });\n    };\n\n    _this.state = {\n      barcode: \"\",\n      ingredients: [],\n      user: {},\n      userIngredientsArray: [],\n      deleted: false,\n      selectedItems: []\n    };\n    return _this;\n  } // Gets current user and passes it to get user ingredients.\n\n\n  _createClass(GroceryList, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // console.log('render runs again')\n      var groceries;\n\n      if (localStorage.getItem('token')) {\n        groceries = this.state.ingredients.map(function (item) {\n          return React.createElement(GroceryCard, {\n            key: item.id,\n            grocery: item,\n            user: _this2.props.user,\n            change: _this2.rerender,\n            userIng: _this2.state.userIngredientsArray,\n            ingredients: _this2.state.ingredients,\n            cart: _this2.collectSelectedItems,\n            selected: _this2.state.selectedItems,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 164\n            },\n            __self: this\n          });\n        });\n      } else {\n        groceries = React.createElement(\"h1\", {\n          className: \"no-pantry\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }, \"Login or Register to see your Pantry!\");\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"Pantry\"), React.createElement(\"form\", {\n        onSubmit: this.scanHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        autoFocus: true,\n        onChange: this.changeHandler,\n        className: \"hidden-input\",\n        value: this.state.barcode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"grocery-cont\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, groceries));\n    }\n  }]);\n\n  return GroceryList;\n}(Component);\n\nexport { GroceryList as default };","map":{"version":3,"sources":["/Users/flatironschool/Personal Projects/scanape_frontend/src/components/GroceryList.js"],"names":["React","Component","GroceryCard","GroceryList","componentDidMount","token","localStorage","getItem","fetch","headers","Authorization","then","res","json","setState","user","getUserIngredients","state","userIngredients","arrayOfUserIngredients","forEach","userIngredient","id","parseInt","user_id","push","getIngredients","ui","ing","ingredient_id","ingredients","scanHandler","e","preventDefault","console","log","scan","barcode","method","body","JSON","stringify","props","changeHandler","target","value","rerender","object","index","newIngredientsArray","splice","collectSelectedItems","item","selectedItems","userIngredientsArray","deleted","groceries","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport GroceryCard from './GroceryCard';\n\nexport default class GroceryList extends Component {\n    constructor(){\n        super()\n        this.state = {\n            barcode: \"\",\n            ingredients: [],\n            user: {},\n            userIngredientsArray: [],\n            deleted: false,\n            selectedItems: []\n        }\n    }\n\n\n    // Gets current user and passes it to get user ingredients.\n    componentDidMount = () => {\n        let token = localStorage.getItem('token')\n        \n        if(token){\n          fetch('http://localhost:3000/current_user', {\n            headers: {\n              'Content-Type': 'application/json',\n              'Accepts': 'application/json',\n              Authorization: token\n            }\n          })\n          .then( res => res.json())\n          .then(json => this.setState({ user: json}, \n            () => this.getUserIngredients(this.state)))\n        }\n    }\n\n    \n    // gets current users ingredients and saves it to state.\n    getUserIngredients = (state) => {\n          let token = localStorage.getItem('token')\n        \n          fetch('http://localhost:3000/user_ingredients',{\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: token\n            }\n        })\n        .then( res => res.json())\n        .then( userIngredients => {\n            let arrayOfUserIngredients = []\n\n            userIngredients.forEach( (userIngredient) => {\n\n                let id = state.user.id\n        \n                if(parseInt(userIngredient.user_id) === id){\n                    arrayOfUserIngredients.push(userIngredient);\n                }\n            })\n\n            this.getIngredients(arrayOfUserIngredients)\n        })\n    }\n    \n    \n    // gets ingredients and saves it to state which gets mapped over to create grocery cards.\n    getIngredients = (state) => {\n        let token = localStorage.getItem('token')\n        // console.log('were here')\n        state.forEach( ui => {\n            \n            fetch('http://localhost:3000/ingredients',{\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: token\n            }\n        }).then( res => res.json())\n        .then( json => {\n            \n            json.forEach( ing => {\n                \n                if(parseInt(ui.ingredient_id) === ing.id){\n                    this.setState({ ingredients: [...this.state.ingredients, ing] })\n                }\n            })\n\n        })\n        })\n    }\n\n    // Responsible for creating a ingredient, user ingredient and a scan in the backend.\n    scanHandler = (e) => {\n        e.preventDefault()\n        console.log('hey')\n        let token = localStorage.getItem('token')\n\n        fetch('http://localhost:3000/scans', {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: token\n            }\n        })\n        .then( res => res.json())\n        .then( json => {\n            json.forEach( scan => {\n                if(scan.barcode === this.state.barcode){\n                    \n                }else{\n                    fetch('http://localhost:3000/scans', {\n                        method: 'POST',\n                        headers: {\n                            \"Content-Type\": \"application/json\"\n                        },\n                        body: JSON.stringify({ \n                            barcode: this.state.barcode,\n                            user_id: this.props.user.id\n                        })\n                    }).then( res => res.json())\n                    .then( json => this.setState({\n                        ingredients: [...this.state.ingredients, json], \n                        barcode: ''\n                    }))\n                }\n            })\n        })\n        \n    }\n\n\n    // Saves barcode to state on change of input field.\n    changeHandler = (e) => {\n        // console.log('change')\n        this.setState({ barcode: e.target.value})\n    }\n\n    \n\n    // Handles deleting user ingredient from user ingredient array.\n    rerender = (object, index) => {\n        console.log(object)\n        \n        // let newUserIngredientsArray = [...this.state.userIngredientsArray];\n        // newUserIngredientsArray.splice(index, 1)\n\n        let newIngredientsArray = [...this.state.ingredients];\n        newIngredientsArray.splice(index, 1)\n        \n        this.setState({ \n            ingredients: newIngredientsArray\n         })\n    }\n\n    collectSelectedItems = (item) => {\n        console.log('reached')\n        this.setState({ selectedItems: [...this.state.selectedItems, item]}, () => console.log(this.state.selectedItems))\n    }\n\n    render(){\n        // console.log('render runs again')\n        let groceries;\n\n        if (localStorage.getItem('token')){\n            \n             groceries = this.state.ingredients.map( item => {\n               return <GroceryCard key={item.id} grocery={item} \n               user={this.props.user} change={this.rerender} \n               userIng={this.state.userIngredientsArray}\n               ingredients={this.state.ingredients}\n               cart={this.collectSelectedItems}\n               selected={this.state.selectedItems}/>\n            })\n        }else{\n            groceries = <h1 className=\"no-pantry\">Login or Register to see your Pantry!</h1>\n        }\n\n        return(\n            <div>\n                <h1>Pantry</h1>\n                    <form onSubmit={this.scanHandler}>\n                    <input type=\"text\" autoFocus onChange={this.changeHandler} className=\"hidden-input\" value={this.state.barcode}></input>\n                    </form>\n                    <div className=\"grocery-cont\">\n                        {groceries}\n                    </div>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}