{"ast":null,"code":"import _toConsumableArray from \"/Users/flatironschool/Personal Projects/scanape-frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/flatironschool/Personal Projects/scanape-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/flatironschool/Personal Projects/scanape-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/flatironschool/Personal Projects/scanape-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/flatironschool/Personal Projects/scanape-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/flatironschool/Personal Projects/scanape-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/flatironschool/Personal Projects/scanape-frontend/src/components/GroceryList.js\";\nimport React, { Component } from 'react';\nimport GroceryCard from './GroceryCard';\n\nvar GroceryList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GroceryList, _Component);\n\n  function GroceryList() {\n    var _this;\n\n    _classCallCheck(this, GroceryList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GroceryList).call(this));\n\n    _this.componentDidMount = function () {\n      var token = localStorage.getItem('token');\n\n      if (token) {\n        fetch('http://localhost:3000/current_user', {\n          headers: {\n            'Content-Type': 'application/json',\n            'Accepts': 'application/json',\n            Authorization: token\n          }\n        }).then(function (res) {\n          return res.json();\n        }).then(function (json) {\n          return _this.setState({\n            user: json\n          }, function () {\n            return _this.getUserIngredient(_this.state);\n          });\n        });\n      }\n    };\n\n    _this.getUserIngredient = function (state) {\n      var token = localStorage.getItem('token');\n      fetch('http://localhost:3000/user_ingredients', {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: token\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (userIngredients) {\n        userIngredients.forEach(function (userIngredient) {\n          var id = state.user.id;\n\n          if (parseInt(userIngredient.user_id) === id) {\n            _this.setState({\n              userIngredientsArray: _toConsumableArray(state.userIngredientsArray).concat([userIngredient])\n            }, function () {\n              return _this.anotherFunction(_this.state.userIngredientsArray);\n            });\n          }\n        });\n      });\n    };\n\n    _this.anotherFunction = function (state) {\n      var token = localStorage.getItem('token');\n      state.forEach(function (ui) {\n        fetch('http://localhost:3000/ingredients', {\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: token\n          }\n        }).then(function (res) {\n          return res.json();\n        }).then(function (json) {\n          json.forEach(function (ing) {\n            if (parseInt(ui.ingredient_id) === ing.id) {\n              console.log('times');\n\n              _this.setState({\n                ingredients: _toConsumableArray(_this.state.ingredients).concat([ing])\n              });\n            }\n          });\n        });\n      });\n    };\n\n    _this.submitHandler = function (e) {\n      e.preventDefault();\n      fetch('http://localhost:3000/scans', {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          barcode: _this.state.barcode,\n          user_id: _this.props.user.id\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        return _this.setState({\n          ingredients: _toConsumableArray(_this.state.ingredients).concat([json]),\n          barcode: ''\n        });\n      });\n    };\n\n    _this.changeHandler = function (e) {\n      console.log('change');\n\n      _this.setState({\n        barcode: e.target.value\n      });\n    };\n\n    _this.rerender = function (object, index) {\n      console.log(_this.state.userIngredientsArray);\n\n      _this.setState({\n        userIngredientsArray: _toConsumableArray(_this.state.userIngredientsArray).concat([_this.state.userIngredientsArray.splice(index, 1)])\n      }, function () {\n        return console.log(\"turkey legs\", _this.state.userIngredientsArray);\n      });\n    };\n\n    _this.componentDidUpdate = function () {\n      console.log('hit');\n    };\n\n    _this.state = {\n      barcode: \"\",\n      ingredients: [],\n      user: {},\n      userIngredientsArray: [],\n      deleted: false\n    };\n    return _this;\n  }\n\n  _createClass(GroceryList, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var groceries;\n\n      if (localStorage.getItem('token')) {\n        groceries = this.state.ingredients.map(function (item) {\n          return React.createElement(GroceryCard, {\n            key: item.id,\n            grocery: item,\n            user: _this2.props.user,\n            change: _this2.rerender,\n            userIng: _this2.state.userIngredientsArray,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123\n            },\n            __self: this\n          });\n        });\n      } else {\n        groceries = React.createElement(\"h1\", {\n          className: \"no-pantry\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, \"Login or Register to see your Pantry!\");\n      } // console.log(this.props.user)\n\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"Pantry\"), React.createElement(\"form\", {\n        onSubmit: this.submitHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        autoFocus: true,\n        onChange: this.changeHandler,\n        className: \"hidden-input\",\n        value: this.state.barcode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"grocery-cont\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, groceries));\n    }\n  }]);\n\n  return GroceryList;\n}(Component);\n\nexport { GroceryList as default };","map":{"version":3,"sources":["/Users/flatironschool/Personal Projects/scanape-frontend/src/components/GroceryList.js"],"names":["React","Component","GroceryCard","GroceryList","componentDidMount","token","localStorage","getItem","fetch","headers","Authorization","then","res","json","setState","user","getUserIngredient","state","userIngredients","forEach","userIngredient","id","parseInt","user_id","userIngredientsArray","anotherFunction","ui","ing","ingredient_id","console","log","ingredients","submitHandler","e","preventDefault","method","body","JSON","stringify","barcode","props","changeHandler","target","value","rerender","object","index","splice","componentDidUpdate","deleted","groceries","map","item"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport GroceryCard from './GroceryCard';\n\nexport default class GroceryList extends Component {\n    constructor(){\n        super()\n        this.state = {\n            barcode: \"\",\n            ingredients: [],\n            user: {},\n            userIngredientsArray: [],\n            deleted: false\n        }\n    }\n\n    \n    componentDidMount = () => {\n    \n        let token = localStorage.getItem('token')\n        \n        if(token){\n          fetch('http://localhost:3000/current_user', {\n            headers: {\n              'Content-Type': 'application/json',\n              'Accepts': 'application/json',\n              Authorization: token\n            }\n          })\n          .then( res => res.json())\n          .then(json => this.setState({ user: json}, \n            () => this.getUserIngredient(this.state)))\n        }\n    }\n\n    \n    getUserIngredient = (state) => {\n          let token = localStorage.getItem('token')\n        \n          fetch('http://localhost:3000/user_ingredients',{\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: token\n            }\n        })\n        .then( res => res.json())\n        .then( userIngredients => {\n            userIngredients.forEach( (userIngredient) => {\n                let id = state.user.id\n        \n                if(parseInt(userIngredient.user_id) === id){\n                    this.setState({ userIngredientsArray: [...state.userIngredientsArray, userIngredient]}, () => this.anotherFunction(this.state.userIngredientsArray), )\n                }\n            })\n        })\n    }\n    \n    \n    anotherFunction = (state) => {\n        let token = localStorage.getItem('token')\n        state.forEach( ui => {\n            \n            fetch('http://localhost:3000/ingredients',{\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: token\n            }\n        }).then( res => res.json())\n        .then( json => {\n            json.forEach( ing => {\n                \n                if(parseInt(ui.ingredient_id) === ing.id){\n                    console.log('times')\n                    this.setState({ ingredients: [...this.state.ingredients, ing]})\n                }\n            })\n        })\n        })\n    }\n\n\n    submitHandler = (e) => {\n        e.preventDefault()\n        \n        fetch('http://localhost:3000/scans', {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({ \n                barcode: this.state.barcode,\n                user_id: this.props.user.id\n            })\n        }).then( res => res.json())\n        .then( json => this.setState({\n            ingredients: [...this.state.ingredients, json], \n            barcode: ''\n        }))\n    }\n\n    changeHandler = (e) => {\n        console.log('change')\n        this.setState({ barcode: e.target.value})\n    }\n\n    rerender = (object, index) => {\n        console.log(this.state.userIngredientsArray)\n        this.setState({ userIngredientsArray: [...this.state.userIngredientsArray, \n            this.state.userIngredientsArray.splice(index, 1)]}, \n            () => console.log(\"turkey legs\", this.state.userIngredientsArray))\n    }\n\n    componentDidUpdate = () => {\n        console.log('hit')\n    }\n\n    render(){\n\n        let groceries;\n\n        if (localStorage.getItem('token')){\n            \n             groceries = this.state.ingredients.map( item => {\n               return <GroceryCard key={item.id} grocery={item} user={this.props.user} change={this.rerender} userIng={this.state.userIngredientsArray}/>\n            })\n        }else{\n            groceries = <h1 className=\"no-pantry\">Login or Register to see your Pantry!</h1>\n        }\n\n        // console.log(this.props.user)\n\n        return(\n            <div>\n                <h1>Pantry</h1>\n                    <form onSubmit={this.submitHandler}>\n                    <input type=\"text\" autoFocus onChange={this.changeHandler} className=\"hidden-input\" value={this.state.barcode}></input>\n                    </form>\n                    <div className=\"grocery-cont\">\n                        {groceries}\n                    </div>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}